#! /usr/bin/env bash
#
# генератор случайных значений
# длина строки задается параметром скрипта при запуске
#

prog_name="${0##*/}"

msg_help_NoParam="${prog_name}: пропущен операнд.\nПо команде «${prog_name} [-h | --help]» можно получить дополнительную информацию.\n"
msg_help_BadParam="${prog_name}: не правильно задан параметр\nПо команде «${prog_name} [-h | --help]» можно получить дополнительную информацию.\n"
msg_help_Param="Использование: ${prog_name} [ПАРАМЕТР]\nГенерирует случайное значение, заданной длины, состоящее из чисел, прописных и строчных букв.\n\n[число]\t\tдлина генерируемого случайного значения\n-h\t--help\tпоказать эту справку и выйти\n"


RandomStr() { # генератор строки случайных символов
    local matrix="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
    while [ "${n:=1}" -le "${1}" ]
        do
            randomstr="$randomstr${matrix:$((RANDOM%${#matrix})):1}"
            (( n+=1 ))
        done
    return
} # end RandomStr

PrintMsg() { # вывод справочной информации
    printf '%b' "${@}"
    exit
} #end PrintMsg

# обработка параметров командной строки
    # проверка наличия параметров в командной строке
    [ -z "${1}" ] && PrintMsg "${msg_help_NoParam}"

    # проверка количества параметров командной строки
    [ "$#" -eq 1 ] || PrintMsg "${msg_help_BadParam}"

    # проверка опций командной строки
    [[ "${1}" == "-h" || "${1}" == "--help" ]] && PrintMsg "${msg_help_Param}"

    # проверка параметров командной строки
    [ "${1%%[![:digit:]]*}" = "$1" ] || PrintMsg "${msg_help_BadParam}"

RandomStr "${1}"

echo "${randomstr}"
